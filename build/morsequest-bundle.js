/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
var MorseQuest;
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/Game.ts":
/*!*********************!*\
  !*** ./src/Game.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Game = void 0;\nvar GameInterface_1 = __webpack_require__(/*! ./interface/GameInterface */ \"./src/interface/GameInterface.ts\");\nvar Camera_1 = __webpack_require__(/*! ./system/Camera */ \"./src/system/Camera.ts\");\nvar Controller_1 = __webpack_require__(/*! ./system/Controller */ \"./src/system/Controller.ts\");\nvar GameMap_1 = __webpack_require__(/*! ./system/GameMap */ \"./src/system/GameMap.ts\");\nvar Graphics_1 = __webpack_require__(/*! ./system/Graphics */ \"./src/system/Graphics.ts\");\nvar Player_1 = __webpack_require__(/*! ./system/Player */ \"./src/system/Player.ts\");\nvar Game = /** @class */ (function () {\n    function Game(canvasid) {\n        if (canvasid === void 0) { canvasid = 'morsequest'; }\n        this.initCanvas(canvasid);\n        this.loop();\n    }\n    Game.prototype.initCanvas = function (canvasid) {\n        var _this = this;\n        Graphics_1.Graphics.canvas = document.getElementById(canvasid);\n        if (!Graphics_1.Graphics.canvas) {\n            console.log('canvas no found');\n            return;\n        }\n        window.addEventListener('resize', function () { _this.resize(); }, false);\n        window.addEventListener('keydown', function (e) { _this.keyPressed(e); });\n        window.addEventListener('mousemove', function (e) { _this.mouseMove(e); });\n        Graphics_1.Graphics.canvas.addEventListener('mousedown', function (e) { _this.mousePressed(e); });\n        Graphics_1.Graphics.ctx = Graphics_1.Graphics.canvas.getContext(\"2d\");\n        if (!Graphics_1.Graphics.ctx) {\n            console.log('2d context setup error');\n            return;\n        }\n        this.gameObjects = [];\n        this.gameMap = new GameMap_1.GameMap();\n        this.player = new Player_1.Player();\n        this.camera = new Camera_1.Camera();\n        this.gameInterface = new GameInterface_1.GameInterface();\n        this.gameObjects.push(this.gameMap);\n        this.gameObjects.push(this.player);\n        this.gameObjects.push(this.camera);\n        this.gameObjects.push(this.gameInterface);\n        Player_1.Player.teleport(GameMap_1.GameMap.getRandomSpawnPoint());\n        this.resize();\n        this.camera.snap();\n    };\n    Game.prototype.loop = function () {\n        var _this = this;\n        Graphics_1.Graphics.ctx.clearRect(0, 0, Graphics_1.Graphics.canvas.width, Graphics_1.Graphics.canvas.height);\n        // background test\n        Graphics_1.Graphics.ctx.fillStyle = '#111';\n        Graphics_1.Graphics.ctx.fillRect(0, 0, Graphics_1.Graphics.canvas.width, Graphics_1.Graphics.canvas.height);\n        for (var _i = 0, _a = this.gameObjects; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            obj.display();\n        }\n        this.writeDebug();\n        requestAnimationFrame(function () { _this.loop(); });\n    };\n    Game.prototype.resize = function () {\n        Graphics_1.Graphics.canvas.width = Graphics_1.Graphics.canvas.parentElement.clientWidth;\n        Graphics_1.Graphics.canvas.height = Graphics_1.Graphics.canvas.parentElement.clientHeight;\n        for (var _i = 0, _a = this.gameObjects; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            obj.resize();\n        }\n    };\n    Game.prototype.keyPressed = function (e) {\n        for (var _i = 0, _a = this.gameObjects; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            obj.keyPressed(Controller_1.Controller.KeyMapping[e.key]);\n        }\n    };\n    Game.prototype.mousePressed = function (e) {\n        var rect = Graphics_1.Graphics.canvas.getBoundingClientRect();\n        var x = e.clientX - rect.left;\n        var y = e.clientY - rect.top;\n        for (var _i = 0, _a = this.gameObjects; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            // obj.mousePressed(e.offsetX, e.offsetY);\n            obj.mousePressed(x, y);\n        }\n    };\n    Game.prototype.mouseMove = function (e) {\n        var rect = Graphics_1.Graphics.canvas.getBoundingClientRect();\n        Controller_1.Controller.mouseX = e.clientX - rect.left;\n        Controller_1.Controller.mouseY = e.clientY - rect.top;\n    };\n    Game.prototype.writeDebug = function () {\n        Graphics_1.Graphics.ctx.save();\n        Graphics_1.Graphics.ctx.translate(5, 5);\n        Graphics_1.Graphics.ctx.font = '11px Arial';\n        Graphics_1.Graphics.ctx.fillStyle = 'grey';\n        Graphics_1.Graphics.ctx.textAlign = 'left';\n        Graphics_1.Graphics.ctx.textBaseline = 'top';\n        Graphics_1.Graphics.ctx.fillText('offsetX: ' + Camera_1.Camera.offsetX, 0, 0);\n        Graphics_1.Graphics.ctx.fillText('offsetY: ' + Camera_1.Camera.offsetY, 0, 15);\n        Graphics_1.Graphics.ctx.fillText('playerX: ' + Player_1.Player.x, 0, 30);\n        Graphics_1.Graphics.ctx.fillText('playerY: ' + Player_1.Player.y, 0, 45);\n        Graphics_1.Graphics.ctx.fillText('mouseX: ' + Controller_1.Controller.mouseX, 80, 0);\n        Graphics_1.Graphics.ctx.fillText('mouseY: ' + Controller_1.Controller.mouseY, 80, 15);\n        Graphics_1.Graphics.ctx.fillText('mouseTileX: ' + Controller_1.Controller.mouseTileX, 80, 30);\n        Graphics_1.Graphics.ctx.fillText('mouseTileY: ' + Controller_1.Controller.mouseTileY, 80, 45);\n        Graphics_1.Graphics.ctx.fillText('movements frozen: ' + GameInterface_1.GameInterface.freezeControls, 170, 0);\n        Graphics_1.Graphics.ctx.restore();\n    };\n    return Game;\n}());\nexports.Game = Game;\n\n\n//# sourceURL=webpack://MorseQuest/./src/Game.ts?");

/***/ }),

/***/ "./src/content/Enemy.ts":
/*!******************************!*\
  !*** ./src/content/Enemy.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.EnemySkin = exports.Enemy = void 0;\nvar Graphics_1 = __webpack_require__(/*! @game/system/Graphics */ \"./src/system/Graphics.ts\");\nvar GameInterface_1 = __webpack_require__(/*! @game/interface/GameInterface */ \"./src/interface/GameInterface.ts\");\nvar Player_1 = __webpack_require__(/*! @game/system/Player */ \"./src/system/Player.ts\");\nvar Enemy = /** @class */ (function () {\n    function Enemy(name, skin, stats, primaryColor) {\n        this.name = name;\n        this.skin = skin;\n        this.stats = stats;\n        this.primaryColor = primaryColor;\n    }\n    /**\n     * Display enemy on x,y NON RELATIVE, top left\n     * @param x\n     * @param y\n     * @param size\n     */\n    Enemy.prototype.display = function () {\n        Enemy.displaySkin(this.skin, this.x - this.size / 2, this.y - this.size / 2, this.size, this.primaryColor);\n    };\n    /**\n     * Display, centered\n     * @param skin\n     * @param x\n     * @param y\n     * @param size\n     * @param primaryColor\n     */\n    Enemy.displaySkin = function (skin, x, y, size, primaryColor) {\n        if (primaryColor === void 0) { primaryColor = 'red'; }\n        if (skin == EnemySkin.Drone) {\n            size = size / 2; // drones are small\n            Graphics_1.Graphics.ctx.fillStyle = primaryColor;\n            Graphics_1.Graphics.ctx.save();\n            Graphics_1.Graphics.ctx.translate(x + size, y + size);\n            Graphics_1.Graphics.ctx.rotate(GameInterface_1.GameInterface.frame * 0.02);\n            Graphics_1.Graphics.ctx.fillRect(-size / 2, -size / 2, size, size);\n            Graphics_1.Graphics.ctx.rotate(-GameInterface_1.GameInterface.frame * 2 * 0.015);\n            Graphics_1.Graphics.ctx.fillRect(-size / 2, -size / 2, size, size);\n            Graphics_1.Graphics.ctx.restore();\n        }\n    };\n    Enemy.prototype.playTurn = function (combat) {\n        var _this = this;\n        if (this.isDead)\n            return;\n        // do the first spell they know to player ...\n        var iSpell = Math.floor(Math.random() * this.stats.spells.length);\n        combat.playSpellAnimation(this.stats.spells[iSpell], ['player'], this, function () {\n            _this.stats.spells[iSpell].effect([Player_1.Player.stats]);\n        });\n        console.log('Enemy ' + this.name + ' do : ' + this.stats.spells[iSpell].name);\n    };\n    /**\n     * Returns true if x,y is inside button\n     * @param x\n     * @param y\n     */\n    Enemy.prototype.isInbound = function (x, y) {\n        return (x > this.x - this.size / 2 && x < this.x + this.size / 2 &&\n            y > this.y - this.size / 2 && y < this.y + this.size / 2);\n    };\n    Object.defineProperty(Enemy.prototype, \"isDead\", {\n        /**\n         * Return if the enemy is dead\n         */\n        get: function () {\n            return this.stats.hp <= 0;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return Enemy;\n}());\nexports.Enemy = Enemy;\nvar EnemySkin;\n(function (EnemySkin) {\n    EnemySkin[EnemySkin[\"Drone\"] = 1] = \"Drone\";\n})(EnemySkin || (exports.EnemySkin = EnemySkin = {}));\n\n\n//# sourceURL=webpack://MorseQuest/./src/content/Enemy.ts?");

/***/ }),

/***/ "./src/content/GameEvents.ts":
/*!***********************************!*\
  !*** ./src/content/GameEvents.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.GameEvents = void 0;\nvar GameEvents = /** @class */ (function () {\n    function GameEvents() {\n    }\n    /**\n     * Deal random encounter, according to map settings (biome, difficulty ...)\n     * (null is a chance)\n     * @param map\n     * @returns\n     */\n    GameEvents.generateMapEncounters = function (map) {\n        return null;\n    };\n    return GameEvents;\n}());\nexports.GameEvents = GameEvents;\n\n\n//# sourceURL=webpack://MorseQuest/./src/content/GameEvents.ts?");

/***/ }),

/***/ "./src/content/GameStats.ts":
/*!**********************************!*\
  !*** ./src/content/GameStats.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.GameStats = void 0;\nvar Graphics_1 = __webpack_require__(/*! @game/system/Graphics */ \"./src/system/Graphics.ts\");\nvar SpellLibrary_1 = __webpack_require__(/*! ./SpellLibrary */ \"./src/content/SpellLibrary.ts\");\n/**\n * Represents game statistics (like strengh, life, etc ...)\n */\nvar GameStats = /** @class */ (function () {\n    function GameStats(mult) {\n        if (mult === void 0) { mult = 1; }\n        this.baseConstitution = 1 * mult;\n        this.baseStrengh = 1 * mult;\n        this.baseDexterity = 1 * mult;\n        this.baseIntelligence = 1 * mult;\n        this.baseWisdom = 1 * mult;\n        this.initiative = 1 * mult;\n        this.classHpMultiplicator = 1;\n        this.hp = this.maxHp;\n        this.mana = this.maxMana;\n        this.cancelAnimation();\n        this.spells = [\n            SpellLibrary_1.SpellLibrary.Skipturn,\n            SpellLibrary_1.SpellLibrary.Fireball,\n        ];\n    }\n    Object.defineProperty(GameStats.prototype, \"maxHp\", {\n        get: function () {\n            return Math.floor((1 + this.baseConstitution) * 10 * this.classHpMultiplicator + 100);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(GameStats.prototype, \"maxMana\", {\n        get: function () {\n            return Math.floor((1 + this.baseWisdom) * 10 + 100);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    GameStats.prototype.healFull = function () {\n        this.hp = this.maxHp;\n    };\n    GameStats.prototype.healHp = function (amount) {\n        this.hp += amount;\n        if (this.hp > this.maxHp)\n            this.hp = this.maxHp;\n    };\n    GameStats.prototype.healMana = function (amount) {\n        this.mana += amount;\n        if (this.mana > this.maxMana)\n            this.mana = this.maxMana;\n    };\n    GameStats.prototype.damage = function (amount, type) {\n        this.hp -= amount;\n        if (this.hp < 0)\n            this.hp = 0;\n    };\n    /**\n     * Displays HP\n     * x and y are not relative\n     * top left corner\n     * @param x\n     * @param y\n     * @param size\n     */\n    GameStats.prototype.displayHp = function (x, y, size) {\n        // hp bar\n        Graphics_1.Graphics.ctx.lineWidth = 3;\n        Graphics_1.Graphics.ctx.strokeStyle = 'white';\n        Graphics_1.Graphics.ctx.fillStyle = 'green';\n        Graphics_1.Graphics.ctx.fillRect(x, y, this.animTargetHealth * size / this.maxHp, GameStats.HP_BAR_HEIGHT);\n        Graphics_1.Graphics.ctx.strokeRect(x, y, size, GameStats.HP_BAR_HEIGHT);\n        // text\n        Graphics_1.Graphics.ctx.fillStyle = 'white';\n        Graphics_1.Graphics.ctx.font = '14px monospace';\n        Graphics_1.Graphics.ctx.fillStyle = 'white';\n        Graphics_1.Graphics.ctx.textAlign = 'left';\n        Graphics_1.Graphics.ctx.textBaseline = 'top';\n        Graphics_1.Graphics.ctx.fillText(\"\".concat(this.hp, \" / \").concat(this.maxHp), x + 5, y + 5);\n        if (this.animTargetHealth < this.hp - 1) {\n            this.animTargetHealth += 2;\n        }\n        else if (this.animTargetHealth > this.hp + 1) {\n            this.animTargetHealth -= 2;\n        }\n        else {\n            this.animTargetHealth = this.hp;\n        }\n    };\n    /**\n     * We don't want animation everytime\n     */\n    GameStats.prototype.cancelAnimation = function () {\n        this.animTargetHealth = this.hp;\n    };\n    GameStats.HP_BAR_HEIGHT = 22;\n    return GameStats;\n}());\nexports.GameStats = GameStats;\n\n\n//# sourceURL=webpack://MorseQuest/./src/content/GameStats.ts?");

/***/ }),

/***/ "./src/content/Maps.ts":
/*!*****************************!*\
  !*** ./src/content/Maps.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Maps = exports.Biome = void 0;\nvar GameInterface_1 = __webpack_require__(/*! @game/interface/GameInterface */ \"./src/interface/GameInterface.ts\");\nvar Player_1 = __webpack_require__(/*! @game/system/Player */ \"./src/system/Player.ts\");\nvar Graphics_1 = __webpack_require__(/*! @game/system/Graphics */ \"./src/system/Graphics.ts\");\nvar DialoguesTuto_1 = __webpack_require__(/*! ./dialogues/DialoguesTuto */ \"./src/content/dialogues/DialoguesTuto.ts\");\nvar Combat_1 = __webpack_require__(/*! @game/interface/Combat */ \"./src/interface/Combat.ts\");\nvar Enemy_1 = __webpack_require__(/*! ./Enemy */ \"./src/content/Enemy.ts\");\nvar GameStats_1 = __webpack_require__(/*! ./GameStats */ \"./src/content/GameStats.ts\");\nvar Biome;\n(function (Biome) {\n    Biome[Biome[\"Normal\"] = 0] = \"Normal\";\n})(Biome || (exports.Biome = Biome = {}));\n/**\n * - Tiles are for decoration, flags, generic events\n * - Map Objects are for specific and scripted events\n */\nvar Maps = /** @class */ (function () {\n    function Maps() {\n    }\n    var _a;\n    _a = Maps;\n    Maps.TilesInfo = new Map([\n        // tiles\n        [1, { solid: true, visible: true, color: '#010289' }],\n        [11, { solid: true, visible: true, color: '#0102CC' }],\n        // events & flags\n        [2, { respawn: true }],\n        [21, { randomEncounter: true, visible: true, color: '#010203' }], // meant to be invisible\n    ]);\n    Maps.MAP_MAIN = {\n        encounterLevel: 1,\n        biome: Biome.Normal,\n        objects: new Map([\n            [901, {\n                    onWalk: function () { Player_1.Player.teleport(null, 'tuto'); },\n                    skin: { type: Graphics_1.SkinType.Portal, primaryColor: 'white', secondaryColor: 'blue' }\n                }],\n            [900, {\n                    onWalk: function () { GameInterface_1.GameInterface.addDialogue(DialoguesTuto_1.DialoguesTuto.INTRODUCTION); },\n                    skin: { type: Graphics_1.SkinType.AttentionMark, primaryColor: 'red', secondaryColor: 'white' }\n                }],\n            [902, {\n                    onWalk: function () {\n                        GameInterface_1.GameInterface.setCombat(new Combat_1.Combat([new Enemy_1.Enemy('Mr. Test #1', Enemy_1.EnemySkin.Drone, new GameStats_1.GameStats()),\n                            new Enemy_1.Enemy('Mr. Test #2', Enemy_1.EnemySkin.Drone, new GameStats_1.GameStats()),\n                            new Enemy_1.Enemy('Mr. Test ALPHA', Enemy_1.EnemySkin.Drone, new GameStats_1.GameStats(4), 'purple'),\n                            new Enemy_1.Enemy('Mr. Test #3', Enemy_1.EnemySkin.Drone, new GameStats_1.GameStats()),\n                            new Enemy_1.Enemy('Mr. Test #4', Enemy_1.EnemySkin.Drone, new GameStats_1.GameStats())]));\n                    },\n                    enemySkin: Enemy_1.EnemySkin.Drone\n                }]\n        ]),\n        raw: \"1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\n        1\\t11\\t11\\t11\\t11\\t11\\t11\\t11\\t11\\t11\\t11\\t11\\t11\\t11\\t11\\t11\\t11\\t1\\t11\\t11\\t11\\t11\\t11\\t11\\t11\\t11\\t11\\t11\\t11\\t11\\t11\\t11\\t11\\t11\\t11\\t11\\t11\\t11\\t1\\n        1\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t1\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t1\\n        1\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t1\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t1\\n        1\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t11\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t1\\n        1\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t21\\t\\t\\t21\\t\\t\\t21\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t1\\n        1\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t1\\n        1\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t1\\n        1\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t21\\t\\t\\t21\\t\\t\\t21\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t1\\n        1\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t1\\n        1\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t1\\n        1\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t21\\t\\t\\t21\\t\\t\\t21\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t1\\n        1\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t1\\t1\\t1\\t1\\t1\\t\\t\\t\\t\\t\\t1\\n        1\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t1\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t11\\t11\\t11\\t11\\t1\\t\\t\\t\\t\\t\\t1\\n        1\\t\\t\\t901\\t2\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t1\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t902\\t\\t900\\t\\t1\\t\\t\\t\\t\\t\\t1\\n        1\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t1\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t1\\t1\\t1\\t1\\t1\\t\\t\\t\\t\\t\\t1\\n        1\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t1\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t11\\t11\\t11\\t11\\t11\\t\\t\\t\\t\\t\\t1\\n        1\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t1\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t1\\n        1\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t1\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t1\\n        1\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t1\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t1\\n        1\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t1\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t1\\n        1\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t1\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t1\\n        1\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t1\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t1\\n        1\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t1\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t1\\n        1\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t1\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t1\\n        1\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t1\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t1\\n        1\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t1\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t1\\n        1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\"\n    };\n    Maps.MAP_TUTO = {\n        objects: new Map([\n            [901, {\n                    onWalk: function () { Player_1.Player.teleport(null, 'main'); },\n                    skin: { type: Graphics_1.SkinType.Portal, primaryColor: 'white', secondaryColor: 'blue' }\n                }],\n            [902, {\n                    onWalk: function () {\n                        GameInterface_1.GameInterface.setCombat(new Combat_1.Combat([new Enemy_1.Enemy('Mr. Test ALPHA', Enemy_1.EnemySkin.Drone, new GameStats_1.GameStats()),\n                            new Enemy_1.Enemy('Mr. Test #2', Enemy_1.EnemySkin.Drone, new GameStats_1.GameStats()),\n                            new Enemy_1.Enemy('Mr. Test #3', Enemy_1.EnemySkin.Drone, new GameStats_1.GameStats()),\n                            new Enemy_1.Enemy('Mr. Test #4', Enemy_1.EnemySkin.Drone, new GameStats_1.GameStats())].slice(Math.floor(Math.random() * 4))));\n                    },\n                    enemySkin: Enemy_1.EnemySkin.Drone\n                }]\n        ]),\n        raw: \"1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t\\t\\t\\t\\t\\t\\t\\t\\n        1\\t11\\t11\\t11\\t11\\t11\\t11\\t11\\t11\\t11\\t11\\t11\\t11\\t11\\t11\\t11\\t11\\t11\\t11\\t11\\t11\\t11\\t11\\t11\\t11\\t11\\t1\\t\\t\\t\\t\\t\\t\\t\\t\\n        1\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t1\\t\\t\\t\\t\\t\\t\\t\\t\\n        1\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\n        1\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t1\\t11\\t11\\t11\\t11\\t11\\t11\\t11\\t11\\n        1\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t11\\t\\t\\t\\t\\t\\t\\t\\t\\n        1\\t\\t\\t2\\t\\t\\t\\t\\t\\t902\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t902\\t\\t\\t\\t901\\t\\t\\t\\t1\\n        1\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t1\\t\\t\\t\\t\\t\\t\\t\\t\\n        1\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1   1\\n        1\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t1\\t\\t\\t\\t\\t\\t\\t\\t\\n        1\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t1\\t\\t\\t\\t\\t\\t\\t\\t\\n        1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t1\\t\\t\\t\\t\\t\\t\\t\\t\"\n    };\n    Maps.MapIDS = {\n        'main': _a.MAP_MAIN,\n        'tuto': _a.MAP_TUTO,\n    };\n    return Maps;\n}());\nexports.Maps = Maps;\n\n\n//# sourceURL=webpack://MorseQuest/./src/content/Maps.ts?");

/***/ }),

/***/ "./src/content/Spell.ts":
/*!******************************!*\
  !*** ./src/content/Spell.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Spell = exports.DamageType = exports.TargetType = void 0;\nvar TargetType;\n(function (TargetType) {\n    TargetType[TargetType[\"NoTarget\"] = 0] = \"NoTarget\";\n    TargetType[TargetType[\"Self\"] = 1] = \"Self\";\n    TargetType[TargetType[\"Single\"] = 2] = \"Single\";\n    TargetType[TargetType[\"Multiple\"] = 3] = \"Multiple\";\n    TargetType[TargetType[\"AllEnemies\"] = 4] = \"AllEnemies\";\n    TargetType[TargetType[\"All\"] = 5] = \"All\";\n})(TargetType || (exports.TargetType = TargetType = {}));\nvar DamageType;\n(function (DamageType) {\n    DamageType[DamageType[\"Strike\"] = 1] = \"Strike\";\n    DamageType[DamageType[\"Piercing\"] = 2] = \"Piercing\";\n    DamageType[DamageType[\"Slashing\"] = 3] = \"Slashing\";\n    DamageType[DamageType[\"Fire\"] = 4] = \"Fire\";\n    DamageType[DamageType[\"Ice\"] = 5] = \"Ice\";\n    DamageType[DamageType[\"Earth\"] = 6] = \"Earth\";\n    DamageType[DamageType[\"Lightning\"] = 7] = \"Lightning\";\n    DamageType[DamageType[\"Dark\"] = 8] = \"Dark\";\n    DamageType[DamageType[\"Light\"] = 9] = \"Light\";\n})(DamageType || (exports.DamageType = DamageType = {}));\nvar Spell = /** @class */ (function () {\n    function Spell() {\n    }\n    return Spell;\n}());\nexports.Spell = Spell;\n\n\n//# sourceURL=webpack://MorseQuest/./src/content/Spell.ts?");

/***/ }),

/***/ "./src/content/SpellLibrary.ts":
/*!*************************************!*\
  !*** ./src/content/SpellLibrary.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SpellLibrary = void 0;\nvar ChainLightning_1 = __webpack_require__(/*! ./spells/ChainLightning */ \"./src/content/spells/ChainLightning.ts\");\nvar Fireball_1 = __webpack_require__(/*! ./spells/Fireball */ \"./src/content/spells/Fireball.ts\");\nvar Icebolt_1 = __webpack_require__(/*! ./spells/Icebolt */ \"./src/content/spells/Icebolt.ts\");\nvar SkipTurn_1 = __webpack_require__(/*! ./spells/SkipTurn */ \"./src/content/spells/SkipTurn.ts\");\nvar SpellLibrary = /** @class */ (function () {\n    function SpellLibrary() {\n    }\n    SpellLibrary.Skipturn = new SkipTurn_1.SpellSkipTurn();\n    SpellLibrary.Fireball = new Fireball_1.SpellFireball();\n    SpellLibrary.Icebolt = new Icebolt_1.Spellicebolt();\n    SpellLibrary.ChainLightning = new ChainLightning_1.SpellChainLightning();\n    return SpellLibrary;\n}());\nexports.SpellLibrary = SpellLibrary;\n\n\n//# sourceURL=webpack://MorseQuest/./src/content/SpellLibrary.ts?");

/***/ }),

/***/ "./src/content/dialogues/DialoguesTuto.ts":
/*!************************************************!*\
  !*** ./src/content/dialogues/DialoguesTuto.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DialoguesTuto = void 0;\nvar Player_1 = __webpack_require__(/*! @game/system/Player */ \"./src/system/Player.ts\");\nvar DialoguesTuto = /** @class */ (function () {\n    function DialoguesTuto() {\n    }\n    DialoguesTuto.INTRODUCTION = [\n        {\n            id: 0,\n            textLines: [\"Un cristal est suspendu en l'air devant vous.\", \"Il vibre d'énergie.\"],\n            answers: [\n                {\n                    text: \"Toucher le cristal.\",\n                    goto: 1,\n                },\n                {\n                    text: \"Ne rien faire.\",\n                    goto: -1,\n                }\n            ]\n        }, {\n            id: 1,\n            textLines: [\"Le cristal vol en éclat, vous projetant dans un nouvel univers.\"],\n            onDialog: function () { Player_1.Player.teleport(null, 'tuto'); }\n        }\n    ];\n    return DialoguesTuto;\n}());\nexports.DialoguesTuto = DialoguesTuto;\n\n\n//# sourceURL=webpack://MorseQuest/./src/content/dialogues/DialoguesTuto.ts?");

/***/ }),

/***/ "./src/content/spells/ChainLightning.ts":
/*!**********************************************!*\
  !*** ./src/content/spells/ChainLightning.ts ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SpellChainLightning = void 0;\nvar Graphics_1 = __webpack_require__(/*! @game/system/Graphics */ \"./src/system/Graphics.ts\");\nvar Spell_1 = __webpack_require__(/*! ../Spell */ \"./src/content/Spell.ts\");\nvar SpellChainLightning = /** @class */ (function (_super) {\n    __extends(SpellChainLightning, _super);\n    function SpellChainLightning() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"Chaine d'éclairs\";\n        _this.description = \"Envoie une chaine d'éclair sur deux ennemies au choix.\";\n        _this.manaCost = 20;\n        _this.targetType = Spell_1.TargetType.Multiple;\n        _this.frameAnimationMax = 80;\n        _this.targetMax = 2;\n        return _this;\n    }\n    SpellChainLightning.prototype.effect = function (targets) {\n        for (var _i = 0, targets_1 = targets; _i < targets_1.length; _i++) {\n            var t = targets_1[_i];\n            t.damage(70, Spell_1.DamageType.Lightning);\n        }\n    };\n    SpellChainLightning.prototype.animate = function (frameLeft, targets, orig, size) {\n        Graphics_1.Graphics.ctx.fillStyle = 'blue';\n        size = size / 2;\n        for (var _i = 0, targets_2 = targets; _i < targets_2.length; _i++) {\n            var target = targets_2[_i];\n            Graphics_1.Graphics.ctx.save();\n            Graphics_1.Graphics.ctx.translate(target.x, target.y);\n            Graphics_1.Graphics.ctx.rotate(frameLeft * 0.3);\n            Graphics_1.Graphics.ctx.fillRect(-size / 2, -size / 2, size, size);\n            Graphics_1.Graphics.ctx.restore();\n        }\n    };\n    return SpellChainLightning;\n}(Spell_1.Spell));\nexports.SpellChainLightning = SpellChainLightning;\n\n\n//# sourceURL=webpack://MorseQuest/./src/content/spells/ChainLightning.ts?");

/***/ }),

/***/ "./src/content/spells/Fireball.ts":
/*!****************************************!*\
  !*** ./src/content/spells/Fireball.ts ***!
  \****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SpellFireball = void 0;\nvar Graphics_1 = __webpack_require__(/*! @game/system/Graphics */ \"./src/system/Graphics.ts\");\nvar Spell_1 = __webpack_require__(/*! ../Spell */ \"./src/content/Spell.ts\");\nvar SpellFireball = /** @class */ (function (_super) {\n    __extends(SpellFireball, _super);\n    function SpellFireball() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"Boule de feu\";\n        _this.description = \"Envoie une boule de feu sur un ennemi, infligeant des dégats de feu.\";\n        _this.manaCost = 20;\n        _this.targetType = Spell_1.TargetType.AllEnemies;\n        _this.frameAnimationMax = 80;\n        return _this;\n    }\n    SpellFireball.prototype.effect = function (targets) {\n        for (var _i = 0, targets_1 = targets; _i < targets_1.length; _i++) {\n            var t = targets_1[_i];\n            t.damage(50, Spell_1.DamageType.Fire);\n        }\n    };\n    SpellFireball.prototype.animate = function (frameLeft, targets, orig, size) {\n        Graphics_1.Graphics.ctx.fillStyle = 'orange';\n        size = size / (frameLeft / 10 + 1);\n        Graphics_1.Graphics.ctx.save();\n        Graphics_1.Graphics.ctx.translate(Graphics_1.Graphics.canvas.width / 2, Graphics_1.Graphics.canvas.height / 2);\n        Graphics_1.Graphics.ctx.rotate(frameLeft * 0.02);\n        Graphics_1.Graphics.ctx.fillRect(-size / 2, -size / 2, size, size);\n        Graphics_1.Graphics.ctx.restore();\n        for (var _i = 0, targets_2 = targets; _i < targets_2.length; _i++) {\n            var target = targets_2[_i];\n            var s = size / 8;\n            Graphics_1.Graphics.ctx.save();\n            Graphics_1.Graphics.ctx.translate(target.x, target.y);\n            Graphics_1.Graphics.ctx.rotate(frameLeft * 0.04);\n            Graphics_1.Graphics.ctx.fillRect(-s / 2, -s / 2, s, s);\n            Graphics_1.Graphics.ctx.restore();\n        }\n    };\n    return SpellFireball;\n}(Spell_1.Spell));\nexports.SpellFireball = SpellFireball;\n\n\n//# sourceURL=webpack://MorseQuest/./src/content/spells/Fireball.ts?");

/***/ }),

/***/ "./src/content/spells/Icebolt.ts":
/*!***************************************!*\
  !*** ./src/content/spells/Icebolt.ts ***!
  \***************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Spellicebolt = void 0;\nvar Graphics_1 = __webpack_require__(/*! @game/system/Graphics */ \"./src/system/Graphics.ts\");\nvar Spell_1 = __webpack_require__(/*! ../Spell */ \"./src/content/Spell.ts\");\nvar Spellicebolt = /** @class */ (function (_super) {\n    __extends(Spellicebolt, _super);\n    function Spellicebolt() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"Éclair de givre\";\n        _this.description = \"Envoi un éclair de givre sur un ennemi.\";\n        _this.manaCost = 15;\n        _this.targetType = Spell_1.TargetType.Single;\n        _this.frameAnimationMax = 80;\n        return _this;\n    }\n    Spellicebolt.prototype.effect = function (targets) {\n        for (var _i = 0, targets_1 = targets; _i < targets_1.length; _i++) {\n            var t = targets_1[_i];\n            t.damage(120, Spell_1.DamageType.Ice);\n        }\n    };\n    Spellicebolt.prototype.animate = function (frameLeft, targets, orig, size) {\n        // todo animation givre\n        Graphics_1.Graphics.ctx.fillStyle = 'lightblue';\n        Graphics_1.Graphics.ctx.save();\n        Graphics_1.Graphics.ctx.translate(targets[0].x, targets[0].y);\n        Graphics_1.Graphics.ctx.rotate(frameLeft * 0.02);\n        Graphics_1.Graphics.ctx.fillRect(-size / 2, -size / 2, size, size);\n        Graphics_1.Graphics.ctx.restore();\n    };\n    return Spellicebolt;\n}(Spell_1.Spell));\nexports.Spellicebolt = Spellicebolt;\n\n\n//# sourceURL=webpack://MorseQuest/./src/content/spells/Icebolt.ts?");

/***/ }),

/***/ "./src/content/spells/SkipTurn.ts":
/*!****************************************!*\
  !*** ./src/content/spells/SkipTurn.ts ***!
  \****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SpellSkipTurn = void 0;\nvar Spell_1 = __webpack_require__(/*! ../Spell */ \"./src/content/Spell.ts\");\nvar SpellSkipTurn = /** @class */ (function (_super) {\n    __extends(SpellSkipTurn, _super);\n    function SpellSkipTurn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"Passer son tour\";\n        _this.description = \"Passe le tour.\";\n        _this.manaCost = 0;\n        _this.targetType = Spell_1.TargetType.NoTarget;\n        _this.frameAnimationMax = 30;\n        return _this;\n    }\n    SpellSkipTurn.prototype.effect = function (targets) { };\n    SpellSkipTurn.prototype.animate = function (frameLeft, targets, orig, size) {\n        // TODO sablier ?\n    };\n    return SpellSkipTurn;\n}(Spell_1.Spell));\nexports.SpellSkipTurn = SpellSkipTurn;\n\n\n//# sourceURL=webpack://MorseQuest/./src/content/spells/SkipTurn.ts?");

/***/ }),

/***/ "./src/interface/Combat.ts":
/*!*********************************!*\
  !*** ./src/interface/Combat.ts ***!
  \*********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Combat = void 0;\nvar GameObject_1 = __webpack_require__(/*! @game/system/GameObject */ \"./src/system/GameObject.ts\");\nvar Graphics_1 = __webpack_require__(/*! @game/system/Graphics */ \"./src/system/Graphics.ts\");\nvar Player_1 = __webpack_require__(/*! @game/system/Player */ \"./src/system/Player.ts\");\nvar Button_1 = __webpack_require__(/*! ./components/Button */ \"./src/interface/components/Button.ts\");\nvar Spell_1 = __webpack_require__(/*! @game/content/Spell */ \"./src/content/Spell.ts\");\nvar GameInterface_1 = __webpack_require__(/*! ./GameInterface */ \"./src/interface/GameInterface.ts\");\nvar Controller_1 = __webpack_require__(/*! @game/system/Controller */ \"./src/system/Controller.ts\");\n/**\n * Displays and process combats\n */\nvar Combat = /** @class */ (function (_super) {\n    __extends(Combat, _super);\n    function Combat(enemies) {\n        var _this = _super.call(this) || this;\n        _this.actionPlayed = false;\n        /**\n         * Set this to the number of targets you have to choose from\n         */\n        _this.targetSelectionToChoose = 0;\n        _this.enemies = enemies;\n        _this.resize();\n        _this.frameAnim = 1.0;\n        _this.buildActions();\n        _this.buildTurnOrder();\n        Player_1.Player.stats.cancelAnimation();\n        console.log('Combat started', enemies);\n        if (_this.getCurrentTurn() != 'player') {\n            _this.doEnemyAction(_this.getCurrentTurn());\n        }\n        return _this;\n    }\n    /**\n     * Combat interface\n     */\n    Combat.prototype.display = function () {\n        if (!this.turnOrder)\n            return;\n        // frame\n        Graphics_1.Graphics.ctx.lineWidth = 4;\n        Graphics_1.Graphics.ctx.fillStyle = '#020202';\n        Graphics_1.Graphics.ctx.strokeStyle = 'lightgrey';\n        Graphics_1.Graphics.ctx.fillRect(this.x, this.y + this.frameAnim * this.height / 2, this.width, this.height - this.frameAnim * this.height);\n        Graphics_1.Graphics.ctx.strokeRect(this.x, this.y + this.frameAnim * this.height / 2, this.width, this.height - this.frameAnim * this.height);\n        if (this.frameAnim > 0) {\n            this.frameAnim -= 0.03;\n        }\n        else {\n            this.frameAnim = 0;\n        }\n        if (this.frameAnim > 0)\n            return;\n        // player\n        // (placeholder)\n        Graphics_1.Graphics.ctx.fillStyle = '#804d32';\n        Graphics_1.Graphics.ctx.fillRect(this.x + Combat.PADDING, this.abilitiesY - Combat.PADDING - this.playerSize, this.playerSize, this.playerSize);\n        // player energy\n        Player_1.Player.stats.displayHp(this.x + Combat.PADDING + this.playerSize + Combat.PADDING, this.abilitiesY - Combat.PADDING - this.playerSize, Math.max(this.width / 6, this.playerSize));\n        // enemies\n        for (var i = 0; i < this.enemies.length; i++) {\n            // skin\n            this.enemies[i].display();\n            // energy\n            this.enemies[i].stats.displayHp(this.enemies[i].x - this.enemies[i].size / 2, this.enemies[i].y + this.enemies[i].size / 2, this.enemies[i].size);\n            if (this.targetSelectionToChoose > 0 && this.enemies[i].isInbound(Controller_1.Controller.mouseX, Controller_1.Controller.mouseY)) {\n                // display selectionitivity\n                Graphics_1.Graphics.ctx.fillStyle = 'yellow';\n                Graphics_1.Graphics.ctx.strokeStyle = 'yellow';\n                Graphics_1.Graphics.ctx.lineWidth = 1;\n                Graphics_1.Graphics.ctx.strokeRect(this.enemies[i].x - this.enemies[i].size / 2, this.enemies[i].y - this.enemies[i].size / 2, this.enemies[i].size, this.enemies[i].size);\n            }\n        }\n        // display spell\n        if (this.currentSpellPlayedFrame > 0) {\n            this.displaySpellAnimation();\n        }\n        // display target selection\n        if (this.targetSelectionToChoose > 0) {\n            Graphics_1.Graphics.ctx.fillStyle = 'yellow';\n            Graphics_1.Graphics.ctx.strokeStyle = 'yellow';\n            Graphics_1.Graphics.ctx.lineWidth = 3;\n            for (var i = 0; i < this.targetSelectionToChoose; i++) {\n                Graphics_1.Graphics.ctx.strokeRect(this.width / 2 + i * 25, this.abilitiesY - 25, 20, 20);\n                if (this.targetSelectionCurrent[i] >= 0) {\n                    Graphics_1.Graphics.ctx.fillRect(this.width / 2 + i * 25, this.abilitiesY - 25, 20, 20);\n                    // display on target\n                    var e = this.enemies[this.targetSelectionCurrent[i]];\n                    Graphics_1.Graphics.ctx.strokeRect(e.x - e.size / 2, e.y - e.size / 2, e.size, e.size);\n                }\n            }\n        }\n        // next turn when ready\n        if (this.currentSpellPlayedFrame <= 0 && this.targetSelectionToChoose <= 0) {\n            if (this.actionPlayed) {\n                this.currentSpellPlayedCallback();\n                // no more frame to play & action is done\n                this.advanceTurn();\n            }\n        }\n        // abilities box\n        Graphics_1.Graphics.ctx.strokeStyle = 'white';\n        Graphics_1.Graphics.ctx.lineWidth = 3;\n        Graphics_1.Graphics.ctx.strokeRect(this.x, this.abilitiesY, this.width, this.abilitiesHeight);\n        if (this.getCurrentTurn() == 'player') {\n            for (var _i = 0, _a = this.buttons; _i < _a.length; _i++) {\n                var ob = _a[_i];\n                ob.display();\n            }\n        }\n    };\n    Combat.prototype.displayTooltips = function () {\n        if (this.frameAnim > 0 || this.getCurrentTurn() != 'player')\n            return;\n        for (var _i = 0, _a = this.buttons; _i < _a.length; _i++) {\n            var ob = _a[_i];\n            ob.displayTooltip();\n        }\n    };\n    Combat.prototype.playSpellAnimation = function (spell, targets, origin, onEnd) {\n        this.currentSpellPlayedCallback = onEnd;\n        this.currentSpellPlayedFrame = spell.frameAnimationMax;\n        this.currentSpellPlayed = spell;\n        if (origin == 'player') {\n            this.currentSpellPlayedOrig = {\n                x: this.x + Combat.PADDING + this.playerSize / 2,\n                y: this.abilitiesY - Combat.PADDING - this.playerSize + this.playerSize / 2,\n            };\n        }\n        else {\n            this.currentSpellPlayedOrig = {\n                x: origin.x,\n                y: origin.y,\n            };\n        }\n        this.currentSpellPlayedTargets = [];\n        for (var _i = 0, targets_1 = targets; _i < targets_1.length; _i++) {\n            var t = targets_1[_i];\n            if (t == 'player') {\n                this.currentSpellPlayedTargets.push({\n                    x: this.x + Combat.PADDING + this.playerSize / 2,\n                    y: this.abilitiesY - Combat.PADDING - this.playerSize + this.playerSize / 2,\n                });\n            }\n            else {\n                this.currentSpellPlayedTargets.push({\n                    x: t.x,\n                    y: t.y,\n                });\n            }\n        }\n    };\n    Combat.prototype.displaySpellAnimation = function () {\n        if (!this.currentSpellPlayed)\n            return;\n        this.currentSpellPlayed.animate(this.currentSpellPlayedFrame, this.currentSpellPlayedTargets, this.currentSpellPlayedOrig, this.playerSize);\n        this.currentSpellPlayedFrame--;\n    };\n    Combat.prototype.doPlayerAction = function (spell) {\n        var _this = this;\n        if (this.actionPlayed)\n            return;\n        console.log('do player turn');\n        this.actionPlayed = true;\n        switch (spell.targetType) {\n            case Spell_1.TargetType.NoTarget:\n                this.playSpellAnimation(spell, [], 'player', function () {\n                    spell.effect([]);\n                });\n                break;\n            case Spell_1.TargetType.Single:\n                this.chooseTargets(1, function (targets) {\n                    _this.playSpellAnimation(spell, targets, 'player', function () {\n                        spell.effect(targets.map(function (o) { return o.stats; }));\n                    });\n                });\n                break;\n            case Spell_1.TargetType.AllEnemies:\n                this.playSpellAnimation(spell, this.enemies, 'player', function () {\n                    spell.effect(_this.enemies.map(function (o) { return o.stats; }));\n                });\n                break;\n            case Spell_1.TargetType.Multiple:\n                this.chooseTargets(spell.targetMax, function (targets) {\n                    _this.playSpellAnimation(spell, targets, 'player', function () {\n                        spell.effect(targets.map(function (o) { return o.stats; }));\n                    });\n                });\n                break;\n            default: break;\n        }\n    };\n    Combat.prototype.chooseTargets = function (number, onTargetsAcquired) {\n        console.log('choosing targets ...');\n        this.targetSelectionToChoose = number;\n        this.targetSelectionCurrent = [];\n        this.targetSelectionCallback = onTargetsAcquired;\n    };\n    Combat.prototype.selectTarget = function (i) {\n        console.log('selected target ', i);\n        this.targetSelectionCurrent.push(i);\n        if (this.targetSelectionCurrent.length == this.targetSelectionToChoose) {\n            // finished\n            var targets = [];\n            for (var _i = 0, _a = this.targetSelectionCurrent; _i < _a.length; _i++) {\n                var n = _a[_i];\n                targets.push(this.enemies[n]);\n            }\n            this.targetSelectionCallback(targets);\n            // reset\n            this.targetSelectionToChoose = 0;\n            this.targetSelectionCurrent = [];\n        }\n    };\n    Combat.prototype.doEnemyAction = function (enemy) {\n        if (!enemy.isDead)\n            enemy.playTurn(this);\n        this.actionPlayed = true;\n    };\n    Combat.prototype.advanceTurn = function () {\n        // check death\n        if (Player_1.Player.stats.hp <= 0) {\n            Player_1.Player.die();\n            this.end();\n            return;\n        }\n        for (var i = this.enemies.length - 1; i >= 0; i--) {\n            if (this.enemies[i].isDead) {\n                console.log(this.enemies[i].name + ' is dead');\n                this.enemies.splice(i, 1);\n            }\n        }\n        if (this.enemies.length == 0) {\n            // win the fight\n            this.winFight();\n            return;\n        }\n        this.actionPlayed = false;\n        this.currentTurn++;\n        if (this.getCurrentTurn() != 'player') {\n            this.doEnemyAction(this.getCurrentTurn());\n        }\n    };\n    Combat.prototype.winFight = function () {\n        console.log('you won bro');\n        this.end();\n    };\n    Combat.prototype.end = function () {\n        GameInterface_1.GameInterface.endCombat();\n    };\n    Combat.prototype.buildActions = function () {\n        var _this = this;\n        this.buttons = [];\n        var _loop_1 = function (i) {\n            this_1.buttons.push(new Button_1.Button(this_1.x + this_1.abilitiesHeight / 4 + (this_1.spellsWidth + this_1.abilitiesHeight / 4) * i, this_1.abilitiesY + this_1.abilitiesHeight / 4, this_1.spellsWidth, this_1.spellsHeight, function () {\n                _this.doPlayerAction(Player_1.Player.stats.spells[i]);\n            }, {\n                text: Player_1.Player.stats.spells[i].name,\n                color: 'black',\n                textColor: 'white',\n                strokeColor: 'white',\n                textSize: 18,\n                colorHover: 'darkgrey'\n            }, Player_1.Player.stats.spells[i].description));\n        };\n        var this_1 = this;\n        // column 1\n        for (var i = 0; i < Player_1.Player.stats.spells.length; i++) {\n            _loop_1(i);\n        }\n    };\n    Combat.prototype.getCurrentTurn = function () {\n        return this.turnOrder[this.currentTurn % this.turnOrder.length];\n    };\n    Combat.prototype.buildTurnOrder = function () {\n        var _a;\n        this.turnOrder = [];\n        this.currentTurn = 0;\n        this.turnOrder.push('player');\n        (_a = this.turnOrder).push.apply(_a, this.enemies);\n        console.log('turn order', this.turnOrder);\n        this.turnOrder.sort(function (a, b) { return Math.random() - 0.5; });\n        console.log('turn order after shuffle', this.turnOrder);\n    };\n    Combat.prototype.mousePressed = function (x, y) {\n        if (this.frameAnim > 0)\n            return;\n        if (this.targetSelectionToChoose > 0) {\n            // select first\n            for (var i = 0; i < this.enemies.length; i++) {\n                if (this.enemies[i].isInbound(x, y)) {\n                    // select this one\n                    this.selectTarget(i);\n                    return;\n                }\n            }\n            return;\n        }\n        for (var _i = 0, _a = this.buttons; _i < _a.length; _i++) {\n            var ob = _a[_i];\n            ob.mousePressed(x, y);\n        }\n    };\n    Combat.prototype.resize = function () {\n        this.x = Combat.MARGIN;\n        this.y = Combat.MARGIN;\n        this.width = Graphics_1.Graphics.canvas.width - Combat.MARGIN * 2;\n        this.height = Graphics_1.Graphics.canvas.height - Combat.MARGIN * 2;\n        this.enemiesSize = this.height / 5;\n        this.playerSize = this.enemiesSize * 1.2;\n        this.abilitiesY = (this.height / 3) * 2 + Combat.MARGIN;\n        this.abilitiesHeight = this.height / 3;\n        this.spellsWidth = this.width / 8;\n        this.spellsHeight = this.abilitiesHeight / 2;\n        for (var i = 0; i < this.enemies.length; i++) {\n            // skin\n            this.enemies[i].x = this.width - Combat.PADDING - i * (Combat.PADDING + this.enemiesSize);\n            this.enemies[i].y = this.y + Combat.PADDING + this.enemiesSize;\n            this.enemies[i].size = this.enemiesSize;\n        }\n    };\n    Combat.MARGIN = 50;\n    Combat.PADDING = 20;\n    return Combat;\n}(GameObject_1.GameObject));\nexports.Combat = Combat;\n\n\n//# sourceURL=webpack://MorseQuest/./src/interface/Combat.ts?");

/***/ }),

/***/ "./src/interface/Dialogue.ts":
/*!***********************************!*\
  !*** ./src/interface/Dialogue.ts ***!
  \***********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Dialogue = void 0;\nvar Controller_1 = __webpack_require__(/*! @game/system/Controller */ \"./src/system/Controller.ts\");\nvar GameObject_1 = __webpack_require__(/*! @game/system/GameObject */ \"./src/system/GameObject.ts\");\nvar GameInterface_1 = __webpack_require__(/*! ./GameInterface */ \"./src/interface/GameInterface.ts\");\nvar Graphics_1 = __webpack_require__(/*! @game/system/Graphics */ \"./src/system/Graphics.ts\");\nvar Dialogue = /** @class */ (function (_super) {\n    __extends(Dialogue, _super);\n    function Dialogue(pieces) {\n        var _this = _super.call(this) || this;\n        _this.pieces = pieces;\n        _this.resize();\n        _this.selectDialoguePiece(0);\n        return _this;\n    }\n    Dialogue.prototype.display = function () {\n        if (!this.currentDialoguePiece)\n            return;\n        // rect\n        Graphics_1.Graphics.ctx.fillStyle = 'lightblue';\n        Graphics_1.Graphics.ctx.strokeStyle = 'black';\n        Graphics_1.Graphics.ctx.fillRect(this.x, this.y, this.width, this.height);\n        Graphics_1.Graphics.ctx.strokeRect(this.x, this.y, this.width, this.height);\n        // text\n        Graphics_1.Graphics.ctx.fillStyle = 'black';\n        Graphics_1.Graphics.ctx.textAlign = \"left\";\n        Graphics_1.Graphics.ctx.font = Dialogue.FONT;\n        Graphics_1.Graphics.ctx.textBaseline = \"top\";\n        /*Graphics.ctx.fillText(this.currentDialoguePiece.textLines.substring(0, Math.floor(this.currentTextAnimation)),\n        this.x + 20, this.y + 20, this.width - 40);*/\n        var charCount = 0;\n        var currentAnimatingLine = 0;\n        for (var i = 0; i < Math.min(this.currentDialoguePiece.textLines.length, currentAnimatingLine + 1); i++) {\n            if (this.currentTextAnimation > this.currentDialoguePiece.textLines[i].length + charCount) {\n                // this line is already animated\n                charCount += this.currentDialoguePiece.textLines[i].length;\n                currentAnimatingLine++;\n                Graphics_1.Graphics.ctx.fillText(this.currentDialoguePiece.textLines[i], this.x + 20, this.y + 20 + Dialogue.INTERLINE * i, this.width - 40);\n            }\n            else if (currentAnimatingLine == i) {\n                // this line is beeing animated\n                Graphics_1.Graphics.ctx.fillText(this.currentDialoguePiece.textLines[i].substring(0, this.currentTextAnimation - charCount), this.x + 20, this.y + 20 + Dialogue.INTERLINE * i, this.width - 40);\n            }\n        }\n        this.currentTextAnimation += 0.5;\n        if (currentAnimatingLine >= this.currentDialoguePiece.textLines.length) {\n            this.answerUnlocked = true;\n        }\n        // responses\n        if (this.answerUnlocked) {\n            Graphics_1.Graphics.ctx.textBaseline = \"bottom\";\n            for (var i = this.currentDialoguePiece.answers.length - 1; i >= 0; i--) {\n                Graphics_1.Graphics.ctx.fillStyle = 'black';\n                if (this.isCoordsInsideAnswer(Controller_1.Controller.mouseX, Controller_1.Controller.mouseY, i)) {\n                    Graphics_1.Graphics.ctx.fillRect(this.x, this.y + this.height - 20 - Dialogue.INTERLINE * i - Dialogue.INTERLINE, this.width, Dialogue.INTERLINE);\n                    Graphics_1.Graphics.ctx.fillStyle = 'white';\n                }\n                Graphics_1.Graphics.ctx.fillText('> ' + this.currentDialoguePiece.answers[i].text, this.x + 20, this.y + this.height - 20 - Dialogue.INTERLINE * i, this.width - 40);\n            }\n        }\n    };\n    Dialogue.prototype.mousePressed = function (x, y) {\n        if (!this.answerUnlocked) {\n            this.currentTextAnimation += 2000;\n            return;\n        }\n        for (var i = this.currentDialoguePiece.answers.length - 1; i >= 0; i--) {\n            // this.x + 20, this.y + this.height - 20 - Dialogue.INTERLINE * i\n            if (this.isCoordsInsideAnswer(x, y, i)) {\n                // trigger answer event\n                if (this.currentDialoguePiece.answers[i].onAnswer) {\n                    this.currentDialoguePiece.answers[i].onAnswer();\n                }\n                // move to next dialogue piece\n                this.selectDialoguePiece(this.currentDialoguePiece.answers[i].goto);\n            }\n        }\n    };\n    Dialogue.prototype.isCoordsInsideAnswer = function (x, y, i) {\n        if (x > this.x && x < this.x + this.width &&\n            y > this.y + this.height - 20 - Dialogue.INTERLINE * i - Dialogue.INTERLINE &&\n            y < this.y + this.height - 20 - Dialogue.INTERLINE * i) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Select the correct dialogue piece\n     * & resize it according to box dimensions\n     * @param id\n     */\n    Dialogue.prototype.selectDialoguePiece = function (id) {\n        this.currentTextAnimation = 0;\n        this.currentDialoguePiece = null;\n        this.answerUnlocked = false;\n        if (id < 0) {\n            this.endDialogue();\n            return;\n        }\n        for (var _i = 0, _a = this.pieces; _i < _a.length; _i++) {\n            var d = _a[_i];\n            if (d.id == id) {\n                this.currentDialoguePiece = d;\n            }\n        }\n        if (!this.currentDialoguePiece) {\n            this.endDialogue();\n            return;\n        }\n        // resize it\n        var newTextLines = [];\n        Graphics_1.Graphics.ctx.font = Dialogue.FONT;\n        for (var _b = 0, _c = this.currentDialoguePiece.textLines; _b < _c.length; _b++) {\n            var line = _c[_b];\n            var size = Graphics_1.Graphics.ctx.measureText(line);\n            var portion = size.width / this.width;\n            if (portion > 1) {\n                // text > width, need splitting\n                //determine char on which to split\n                var charAt = Math.floor((line.length * this.width) / size.width - 1);\n                for (var i = charAt; i > 0; i--) {\n                    // first sequable char\n                    if (line.charAt(i) == ' ') {\n                        charAt = i + 1;\n                        break;\n                    }\n                }\n                var textA = line.substring(0, charAt);\n                var textB = line.substring(charAt);\n                newTextLines.push(textA, textB);\n            }\n            else {\n                newTextLines.push(line);\n            }\n        }\n        this.currentDialoguePiece.textLines = newTextLines;\n        // if there is no answer, generate a \"end\" answer leading to -1\n        if (!this.currentDialoguePiece.answers) {\n            this.currentDialoguePiece.answers = [];\n            this.currentDialoguePiece.answers.push({\n                goto: -1,\n                text: 'Fin',\n            });\n        }\n        // trigger dialog event\n        if (this.currentDialoguePiece.onDialog) {\n            this.currentDialoguePiece.onDialog();\n        }\n        this.answerUnlocked = false;\n    };\n    Dialogue.prototype.endDialogue = function () {\n        GameInterface_1.GameInterface.removeCurrentDialogue();\n    };\n    Dialogue.prototype.resize = function () {\n        this.x = 100;\n        this.y = Graphics_1.Graphics.canvas.height - 250;\n        this.width = Graphics_1.Graphics.canvas.width - 200;\n        this.height = 200;\n    };\n    Dialogue.FONT = \"30px monospace\";\n    Dialogue.INTERLINE = 30;\n    return Dialogue;\n}(GameObject_1.GameObject));\nexports.Dialogue = Dialogue;\n\n\n//# sourceURL=webpack://MorseQuest/./src/interface/Dialogue.ts?");

/***/ }),

/***/ "./src/interface/GameInterface.ts":
/*!****************************************!*\
  !*** ./src/interface/GameInterface.ts ***!
  \****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.GameInterface = void 0;\nvar GameObject_1 = __webpack_require__(/*! @game/system/GameObject */ \"./src/system/GameObject.ts\");\nvar Dialogue_1 = __webpack_require__(/*! ./Dialogue */ \"./src/interface/Dialogue.ts\");\nvar Controller_1 = __webpack_require__(/*! @game/system/Controller */ \"./src/system/Controller.ts\");\nvar Graphics_1 = __webpack_require__(/*! @game/system/Graphics */ \"./src/system/Graphics.ts\");\nvar GameInterface = /** @class */ (function (_super) {\n    __extends(GameInterface, _super);\n    function GameInterface() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    GameInterface.prototype.init = function () {\n        GameInterface.hudElements = [];\n        GameInterface.dialogues = [];\n        for (var _i = 0, _a = GameInterface.hudElements; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            obj.init();\n        }\n    };\n    GameInterface.prototype.display = function () {\n        // Combat\n        if (GameInterface.endCombatFlag) {\n            delete GameInterface.combat;\n            GameInterface.endCombatFlag = false;\n        }\n        if (GameInterface.combat) {\n            GameInterface.combat.display();\n            GameInterface.combat.displayTooltips();\n        }\n        // Permanent HUD elements\n        for (var _i = 0, _a = GameInterface.hudElements; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            obj.display();\n        }\n        // process first dialogue\n        if (GameInterface.dialogues.length > 0)\n            GameInterface.dialogues[0].display();\n        // debug TODO REMOVE ME\n        Graphics_1.Graphics.ctx.fillStyle = 'purple';\n        Graphics_1.Graphics.ctx.fillRect(Controller_1.Controller.mouseX - 5, Controller_1.Controller.mouseY - 5, 10, 10);\n        GameInterface.frame++;\n    };\n    GameInterface.prototype.keyPressed = function (key) {\n        // Combat\n        if (GameInterface.combat) {\n            GameInterface.combat.keyPressed(key);\n        }\n        for (var _i = 0, _a = GameInterface.hudElements; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            obj.keyPressed(key);\n        }\n        if (GameInterface.dialogues.length > 0)\n            GameInterface.dialogues[0].keyPressed(key);\n    };\n    GameInterface.prototype.mousePressed = function (x, y) {\n        // Combat\n        if (GameInterface.combat) {\n            GameInterface.combat.mousePressed(x, y);\n        }\n        for (var _i = 0, _a = GameInterface.hudElements; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            obj.mousePressed(x, y);\n        }\n        if (GameInterface.dialogues.length > 0)\n            GameInterface.dialogues[0].mousePressed(x, y);\n    };\n    GameInterface.prototype.resize = function () {\n        // Combat\n        if (GameInterface.combat) {\n            GameInterface.combat.resize();\n        }\n        for (var _i = 0, _a = GameInterface.hudElements; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            obj.resize();\n        }\n        if (GameInterface.dialogues.length > 0)\n            GameInterface.dialogues[0].resize();\n    };\n    Object.defineProperty(GameInterface, \"freezeControls\", {\n        /**\n         * Will return true if overworld controls should be freezed, be it for\n         * dialogue, interface, combat ...\n         */\n        get: function () {\n            return GameInterface.dialogues.length > 0 ||\n                GameInterface.combat != null;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    GameInterface.addDialogue = function (pieces) {\n        GameInterface.dialogues.push(new Dialogue_1.Dialogue(pieces));\n    };\n    GameInterface.removeCurrentDialogue = function () {\n        GameInterface.dialogues.shift();\n    };\n    GameInterface.setCombat = function (combat) {\n        GameInterface.combat = combat;\n    };\n    GameInterface.endCombat = function () {\n        GameInterface.endCombatFlag = true;\n    };\n    GameInterface.frame = 0;\n    GameInterface.endCombatFlag = false;\n    return GameInterface;\n}(GameObject_1.GameObject));\nexports.GameInterface = GameInterface;\n\n\n//# sourceURL=webpack://MorseQuest/./src/interface/GameInterface.ts?");

/***/ }),

/***/ "./src/interface/Tooltip.ts":
/*!**********************************!*\
  !*** ./src/interface/Tooltip.ts ***!
  \**********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Tooltip = void 0;\nvar Controller_1 = __webpack_require__(/*! @game/system/Controller */ \"./src/system/Controller.ts\");\nvar GameObject_1 = __webpack_require__(/*! @game/system/GameObject */ \"./src/system/GameObject.ts\");\nvar Graphics_1 = __webpack_require__(/*! @game/system/Graphics */ \"./src/system/Graphics.ts\");\nvar Tooltip = /** @class */ (function (_super) {\n    __extends(Tooltip, _super);\n    function Tooltip(text, x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this.text = text;\n        _this.x = x;\n        _this.y = y;\n        _this.width = width;\n        _this.height = height;\n        return _this;\n    }\n    Tooltip.prototype.display = function () {\n        // if mouse cursor is inside boundaries, display the tooltip\n        if (this.isInbound(Controller_1.Controller.mouseX, Controller_1.Controller.mouseY)) {\n            Graphics_1.Graphics.ctx.fillStyle = 'grey';\n            Graphics_1.Graphics.ctx.fillRect(Controller_1.Controller.mouseX, Controller_1.Controller.mouseY - 20, Graphics_1.Graphics.ctx.measureText(this.text).width + 4, 22);\n            Graphics_1.Graphics.ctx.fillStyle = 'black';\n            Graphics_1.Graphics.ctx.textAlign = \"left\";\n            Graphics_1.Graphics.ctx.font = \"18px monospace\";\n            Graphics_1.Graphics.ctx.textBaseline = \"top\";\n            Graphics_1.Graphics.ctx.fillText(this.text, Controller_1.Controller.mouseX + 2, Controller_1.Controller.mouseY + 1 - 20);\n        }\n    };\n    /**\n     * Returns true if x,y is inside button\n     * @param x\n     * @param y\n     */\n    Tooltip.prototype.isInbound = function (x, y) {\n        return (x > this.x && x < this.x + this.width &&\n            y > this.y && y < this.y + this.height);\n    };\n    return Tooltip;\n}(GameObject_1.GameObject));\nexports.Tooltip = Tooltip;\n\n\n//# sourceURL=webpack://MorseQuest/./src/interface/Tooltip.ts?");

/***/ }),

/***/ "./src/interface/components/Button.ts":
/*!********************************************!*\
  !*** ./src/interface/components/Button.ts ***!
  \********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Button = void 0;\nvar GameObject_1 = __webpack_require__(/*! @game/system/GameObject */ \"./src/system/GameObject.ts\");\nvar Graphics_1 = __webpack_require__(/*! @game/system/Graphics */ \"./src/system/Graphics.ts\");\nvar Tooltip_1 = __webpack_require__(/*! ../Tooltip */ \"./src/interface/Tooltip.ts\");\nvar Controller_1 = __webpack_require__(/*! @game/system/Controller */ \"./src/system/Controller.ts\");\nvar Button = /** @class */ (function (_super) {\n    __extends(Button, _super);\n    function Button(x, y, width, height, onClick, style, tooltip) {\n        if (style === void 0) { style = {}; }\n        var _this = _super.call(this) || this;\n        _this.x = x;\n        _this.y = y;\n        _this.width = width;\n        _this.height = height;\n        _this.onClick = onClick;\n        _this.style = style;\n        if (tooltip) {\n            _this.tooltip = new Tooltip_1.Tooltip(tooltip, x, y, width, height);\n        }\n        return _this;\n    }\n    Button.prototype.display = function () {\n        if (this.style.colorHover && this.isInbound(Controller_1.Controller.mouseX, Controller_1.Controller.mouseY)) {\n            Graphics_1.Graphics.ctx.fillStyle = this.style.colorHover;\n        }\n        else {\n            Graphics_1.Graphics.ctx.fillStyle = this.style.color || 'black';\n        }\n        Graphics_1.Graphics.ctx.fillRect(this.x, this.y, this.width, this.height);\n        if (this.style.text) {\n            Graphics_1.Graphics.ctx.fillStyle = this.style.textColor || 'grey';\n            Graphics_1.Graphics.ctx.textAlign = \"center\";\n            Graphics_1.Graphics.ctx.font = this.style.textSize + \"px monospace\";\n            Graphics_1.Graphics.ctx.textBaseline = \"middle\";\n            Graphics_1.Graphics.ctx.fillText(this.style.text, this.x + this.width / 2, this.y + this.height / 2);\n        }\n        if (this.style.strokeColor) {\n            Graphics_1.Graphics.ctx.lineWidth = 3;\n            Graphics_1.Graphics.ctx.strokeStyle = this.style.strokeColor;\n            Graphics_1.Graphics.ctx.strokeRect(this.x, this.y, this.width, this.height);\n        }\n    };\n    Button.prototype.displayTooltip = function () {\n        if (this.tooltip) {\n            this.tooltip.display();\n        }\n    };\n    Button.prototype.mousePressed = function (x, y) {\n        if (this.isInbound(x, y)) {\n            this.onClick();\n        }\n    };\n    /**\n     * Returns true if x,y is inside button\n     * @param x\n     * @param y\n     */\n    Button.prototype.isInbound = function (x, y) {\n        return (x > this.x && x < this.x + this.width &&\n            y > this.y && y < this.y + this.height);\n    };\n    return Button;\n}(GameObject_1.GameObject));\nexports.Button = Button;\n\n\n//# sourceURL=webpack://MorseQuest/./src/interface/components/Button.ts?");

/***/ }),

/***/ "./src/system/Camera.ts":
/*!******************************!*\
  !*** ./src/system/Camera.ts ***!
  \******************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Camera = void 0;\nvar GameMap_1 = __webpack_require__(/*! ./GameMap */ \"./src/system/GameMap.ts\");\nvar GameObject_1 = __webpack_require__(/*! ./GameObject */ \"./src/system/GameObject.ts\");\nvar Graphics_1 = __webpack_require__(/*! ./Graphics */ \"./src/system/Graphics.ts\");\nvar Camera = /** @class */ (function (_super) {\n    __extends(Camera, _super);\n    function Camera() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Camera.prototype.resize = function () {\n        Camera.cellSize = Math.floor(Graphics_1.Graphics.canvas.width / GameMap_1.GameMap.MAX_BLOCK_WIDTH_VIEW);\n    };\n    Camera.prototype.display = function () {\n        // target should always be on center of screen\n        if (Camera.offsetX + Graphics_1.Graphics.canvas.width / 2 < Camera.targetCoordinates.x * Camera.cellSize)\n            Camera.offsetX += Camera.CAMERA_SPEED;\n        if (Camera.offsetX + Graphics_1.Graphics.canvas.width / 2 > Camera.targetCoordinates.x * Camera.cellSize + Camera.cellSize)\n            Camera.offsetX -= Camera.CAMERA_SPEED;\n        if (Camera.offsetY + Graphics_1.Graphics.canvas.height / 2 < Camera.targetCoordinates.y * Camera.cellSize)\n            Camera.offsetY += Camera.CAMERA_SPEED;\n        if (Camera.offsetY + Graphics_1.Graphics.canvas.height / 2 > Camera.targetCoordinates.y * Camera.cellSize + Camera.cellSize)\n            Camera.offsetY -= Camera.CAMERA_SPEED;\n        this.boundCamera();\n    };\n    Camera.prototype.boundCamera = function () {\n        if (Camera.offsetX + Graphics_1.Graphics.canvas.width > GameMap_1.GameMap.MapWidth * Camera.cellSize)\n            Camera.offsetX = GameMap_1.GameMap.MapWidth * Camera.cellSize - Graphics_1.Graphics.canvas.width;\n        if (Camera.offsetY + Graphics_1.Graphics.canvas.height > GameMap_1.GameMap.MapHeight * Camera.cellSize)\n            Camera.offsetY = GameMap_1.GameMap.MapHeight * Camera.cellSize - Graphics_1.Graphics.canvas.height;\n        if (Camera.offsetX < 0)\n            Camera.offsetX = 0;\n        if (Camera.offsetY < 0)\n            Camera.offsetY = 0;\n    };\n    /**\n     * Directly snap camera towards its target\n     */\n    Camera.prototype.snap = function () {\n        Camera.offsetX = Camera.targetCoordinates.x * Camera.cellSize - Graphics_1.Graphics.canvas.width / 2;\n        Camera.offsetY = Camera.targetCoordinates.y * Camera.cellSize - Graphics_1.Graphics.canvas.height / 2;\n        this.boundCamera();\n    };\n    Camera.offsetX = 0;\n    Camera.offsetY = 0;\n    Camera.CAMERA_SPEED = 10;\n    return Camera;\n}(GameObject_1.GameObject));\nexports.Camera = Camera;\n\n\n//# sourceURL=webpack://MorseQuest/./src/system/Camera.ts?");

/***/ }),

/***/ "./src/system/Controller.ts":
/*!**********************************!*\
  !*** ./src/system/Controller.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Controller = void 0;\nvar Camera_1 = __webpack_require__(/*! ./Camera */ \"./src/system/Camera.ts\");\nvar Controller = /** @class */ (function () {\n    function Controller() {\n    }\n    Object.defineProperty(Controller, \"mouseTileX\", {\n        get: function () {\n            return Math.floor((Controller.mouseX + Camera_1.Camera.offsetX) / Camera_1.Camera.cellSize);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Controller, \"mouseTileY\", {\n        get: function () {\n            return Math.floor((Controller.mouseY + Camera_1.Camera.offsetY) / Camera_1.Camera.cellSize);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Controller.KEY_UP = 1;\n    Controller.KEY_DOWN = 2;\n    Controller.KEY_LEFT = 3;\n    Controller.KEY_RIGHT = 4;\n    Controller.KeyMapping = {\n        'z': Controller.KEY_UP,\n        's': Controller.KEY_DOWN,\n        'q': Controller.KEY_LEFT,\n        'd': Controller.KEY_RIGHT,\n        'ArrowUp': Controller.KEY_UP,\n        'ArrowDown': Controller.KEY_DOWN,\n        'ArrowLeft': Controller.KEY_LEFT,\n        'ArrowRight': Controller.KEY_RIGHT,\n    };\n    Controller.mousePressed = false;\n    return Controller;\n}());\nexports.Controller = Controller;\n\n\n//# sourceURL=webpack://MorseQuest/./src/system/Controller.ts?");

/***/ }),

/***/ "./src/system/GameMap.ts":
/*!*******************************!*\
  !*** ./src/system/GameMap.ts ***!
  \*******************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.GameMap = void 0;\nvar Maps_1 = __webpack_require__(/*! @game/content/Maps */ \"./src/content/Maps.ts\");\nvar Camera_1 = __webpack_require__(/*! ./Camera */ \"./src/system/Camera.ts\");\nvar GameObject_1 = __webpack_require__(/*! ./GameObject */ \"./src/system/GameObject.ts\");\nvar Graphics_1 = __webpack_require__(/*! ./Graphics */ \"./src/system/Graphics.ts\");\nvar GameEvents_1 = __webpack_require__(/*! @game/content/GameEvents */ \"./src/content/GameEvents.ts\");\nvar Enemy_1 = __webpack_require__(/*! @game/content/Enemy */ \"./src/content/Enemy.ts\");\nvar GameMap = /** @class */ (function (_super) {\n    __extends(GameMap, _super);\n    function GameMap() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    GameMap.prototype.init = function () {\n        // 1st map to be loaded\n        GameMap.loadMap('main');\n    };\n    GameMap.loadMap = function (mapId) {\n        console.log(\"loading map <\".concat(mapId, \">\"));\n        GameMap.MapTiles = [];\n        GameMap.SpawnPoints = [];\n        GameMap.MapWidth = 0;\n        GameMap.MapHeight = 0;\n        GameMap.currentMapInfo = null;\n        GameMap.Encounters = new Map();\n        if (!Maps_1.Maps.MapIDS[mapId]) {\n            console.log(\"can't find map <\".concat(mapId, \">, loading <main>\"));\n            mapId = 'main';\n        }\n        GameMap.currentMapInfo = Maps_1.Maps.MapIDS[mapId];\n        var lines = GameMap.currentMapInfo.raw.split('\\n');\n        for (var i = 0; i < lines.length; i++) {\n            var cells = lines[i].split('\\t');\n            GameMap.MapWidth >= cells.length ? null : GameMap.MapWidth = cells.length;\n            GameMap.MapTiles[i] = [];\n            for (var j = 0; j < cells.length; j++) {\n                GameMap.MapTiles[i][j] = parseInt(cells[j]);\n                // spawn point\n                if (GameMap.getTileSetting(GameMap.MapTiles[i][j]).respawn) {\n                    GameMap.SpawnPoints.push({ x: j, y: i });\n                }\n                // encounter\n                if (GameMap.getTileSetting(GameMap.MapTiles[i][j]).randomEncounter) {\n                    var encounter = GameEvents_1.GameEvents.generateMapEncounters(GameMap.currentMapInfo);\n                    if (encounter) {\n                        GameMap.Encounters.set(\"\".concat(j, \":\").concat(i), encounter);\n                    }\n                }\n            }\n        }\n        GameMap.MapHeight = lines.length;\n        console.log(\"\".concat(GameMap.MapWidth, \" x \").concat(GameMap.MapHeight, \" map loaded\"));\n        console.log('spawn points', GameMap.SpawnPoints);\n        console.log('encounters', GameMap.Encounters);\n    };\n    GameMap.prototype.display = function () {\n        if (!GameMap.MapTiles)\n            return;\n        var startx = Math.max(Math.floor(Camera_1.Camera.offsetX / Camera_1.Camera.cellSize), 0);\n        var starty = Math.max(Math.floor(Camera_1.Camera.offsetY / Camera_1.Camera.cellSize), 0);\n        var lenx = Math.floor(Graphics_1.Graphics.canvas.width / Camera_1.Camera.cellSize);\n        var leny = Math.floor(Graphics_1.Graphics.canvas.height / Camera_1.Camera.cellSize);\n        for (var x = startx; x < Math.min(startx + lenx + 2, GameMap.MapWidth); x++) {\n            for (var y = starty; y < Math.min(starty + leny + 2, GameMap.MapHeight); y++) {\n                var tile = GameMap.getCollision({ x: x, y: y });\n                if (tile)\n                    Graphics_1.Graphics.displayTile(tile, x, y);\n                var obj = GameMap.getMapObject({ x: x, y: y });\n                if (obj && obj.skin)\n                    Graphics_1.Graphics.displayObject(obj, x, y);\n                if (obj && obj.enemySkin)\n                    Enemy_1.Enemy.displaySkin(obj.enemySkin, x * Camera_1.Camera.cellSize - Camera_1.Camera.offsetX, y * Camera_1.Camera.cellSize - Camera_1.Camera.offsetY, Camera_1.Camera.cellSize);\n            }\n        }\n    };\n    GameMap.getRandomSpawnPoint = function () {\n        if (!GameMap.SpawnPoints)\n            return null;\n        var rand = Math.floor(Math.random() * GameMap.SpawnPoints.length);\n        return GameMap.SpawnPoints[rand];\n    };\n    GameMap.getTileSetting = function (id) {\n        if (Maps_1.Maps.TilesInfo.has(id)) {\n            return Maps_1.Maps.TilesInfo.get(id);\n        }\n        return {};\n    };\n    GameMap.getCollision = function (coordinates) {\n        if (coordinates.x >= 0 && coordinates.y >= 0) {\n            return GameMap.getTileSetting(GameMap.MapTiles[coordinates.y][coordinates.x]);\n        }\n    };\n    GameMap.getMapObject = function (coordinates) {\n        var n = GameMap.MapTiles[coordinates.y][coordinates.x];\n        if (n <= 1 || !GameMap.currentMapInfo.objects)\n            return;\n        if (GameMap.currentMapInfo.objects.has(n)) {\n            return GameMap.currentMapInfo.objects.get(n);\n        }\n        return null;\n    };\n    GameMap.MAX_BLOCK_WIDTH_VIEW = 30;\n    GameMap.MAX_BLOCK_HEIGHT_VIEW = 30;\n    return GameMap;\n}(GameObject_1.GameObject));\nexports.GameMap = GameMap;\n\n\n//# sourceURL=webpack://MorseQuest/./src/system/GameMap.ts?");

/***/ }),

/***/ "./src/system/GameObject.ts":
/*!**********************************!*\
  !*** ./src/system/GameObject.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.GameObject = void 0;\nvar GameObject = /** @class */ (function () {\n    function GameObject() {\n        this.init();\n    }\n    /**\n     * At end of GameObject constructor\n     */\n    GameObject.prototype.init = function () { };\n    /**\n     * Each resize event\n     */\n    GameObject.prototype.resize = function () { };\n    /**\n     * Each keypress event\n     * @param key\n     */\n    GameObject.prototype.keyPressed = function (key) { };\n    /**\n     * Each mouse pressed event\n     * @param x\n     * @param y\n     */\n    GameObject.prototype.mousePressed = function (x, y) { };\n    return GameObject;\n}());\nexports.GameObject = GameObject;\n\n\n//# sourceURL=webpack://MorseQuest/./src/system/GameObject.ts?");

/***/ }),

/***/ "./src/system/Graphics.ts":
/*!********************************!*\
  !*** ./src/system/Graphics.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Graphics = exports.SkinType = void 0;\nvar Camera_1 = __webpack_require__(/*! ./Camera */ \"./src/system/Camera.ts\");\nvar GameInterface_1 = __webpack_require__(/*! @game/interface/GameInterface */ \"./src/interface/GameInterface.ts\");\nvar SkinType;\n(function (SkinType) {\n    SkinType[SkinType[\"AttentionMark\"] = 1] = \"AttentionMark\";\n    SkinType[SkinType[\"Portal\"] = 2] = \"Portal\";\n})(SkinType || (exports.SkinType = SkinType = {}));\n/**\n * Simple graphics, only animated with frames number (stateless)\n */\nvar Graphics = /** @class */ (function () {\n    function Graphics() {\n    }\n    /**\n     * Display a single standard tile\n     * @param ctx\n     * @param tile\n     * @param x coord x\n     * @param y coord y\n     */\n    Graphics.displayTile = function (tile, x, y) {\n        if (tile.visible && tile.color) {\n            Graphics.ctx.fillStyle = tile.color;\n            Graphics.ctx.fillRect(Math.floor(x * Camera_1.Camera.cellSize - Camera_1.Camera.offsetX), Math.floor(y * Camera_1.Camera.cellSize - Camera_1.Camera.offsetY), Camera_1.Camera.cellSize, Camera_1.Camera.cellSize);\n        }\n    };\n    Graphics.displayObject = function (object, x, y) {\n        if (!object.skin)\n            return;\n        /**\n         * Attention mark graphics\n         */\n        if (object.skin.type == SkinType.AttentionMark) {\n            Graphics.ctx.fillStyle = object.skin.secondaryColor;\n            Graphics.ctx.save();\n            Graphics.ctx.translate(x * Camera_1.Camera.cellSize - Camera_1.Camera.offsetX + Camera_1.Camera.cellSize / 2, y * Camera_1.Camera.cellSize - Camera_1.Camera.offsetY + Camera_1.Camera.cellSize / 2);\n            Graphics.ctx.rotate(45 * Math.PI / 180);\n            Graphics.ctx.fillRect(-Camera_1.Camera.cellSize / 2, -Camera_1.Camera.cellSize / 2, Camera_1.Camera.cellSize, Camera_1.Camera.cellSize);\n            Graphics.ctx.restore();\n            Graphics.ctx.fillStyle = object.skin.primaryColor;\n            Graphics.ctx.textAlign = \"center\";\n            Graphics.ctx.font = Graphics.FONT;\n            Graphics.ctx.textBaseline = \"middle\";\n            Graphics.ctx.fillText('!', x * Camera_1.Camera.cellSize - Camera_1.Camera.offsetX + Camera_1.Camera.cellSize / 2, y * Camera_1.Camera.cellSize - Camera_1.Camera.offsetY + Camera_1.Camera.cellSize / 2);\n        }\n        /**\n         * Portal graphics\n         */\n        if (object.skin.type == SkinType.Portal) {\n            Graphics.ctx.fillStyle = object.skin.primaryColor;\n            Graphics.ctx.beginPath();\n            Graphics.ctx.arc(x * Camera_1.Camera.cellSize - Camera_1.Camera.offsetX + Camera_1.Camera.cellSize / 2, y * Camera_1.Camera.cellSize - Camera_1.Camera.offsetY + Camera_1.Camera.cellSize / 2, Camera_1.Camera.cellSize / 2, 0, 2 * Math.PI, false);\n            Graphics.ctx.fill();\n            Graphics.ctx.beginPath();\n            Graphics.ctx.strokeStyle = object.skin.secondaryColor;\n            Graphics.ctx.lineWidth = Camera_1.Camera.cellSize / 10;\n            Graphics.ctx.arc(x * Camera_1.Camera.cellSize - Camera_1.Camera.offsetX + Camera_1.Camera.cellSize / 2, y * Camera_1.Camera.cellSize - Camera_1.Camera.offsetY + Camera_1.Camera.cellSize / 2, Camera_1.Camera.cellSize / 2, GameInterface_1.GameInterface.frame / 10, GameInterface_1.GameInterface.frame / 10 + Math.PI, false);\n            Graphics.ctx.stroke();\n        }\n    };\n    Graphics.FONT = \"30px monospace\";\n    return Graphics;\n}());\nexports.Graphics = Graphics;\n\n\n//# sourceURL=webpack://MorseQuest/./src/system/Graphics.ts?");

/***/ }),

/***/ "./src/system/Player.ts":
/*!******************************!*\
  !*** ./src/system/Player.ts ***!
  \******************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Player = void 0;\nvar Camera_1 = __webpack_require__(/*! ./Camera */ \"./src/system/Camera.ts\");\nvar Controller_1 = __webpack_require__(/*! ./Controller */ \"./src/system/Controller.ts\");\nvar GameMap_1 = __webpack_require__(/*! ./GameMap */ \"./src/system/GameMap.ts\");\nvar GameObject_1 = __webpack_require__(/*! ./GameObject */ \"./src/system/GameObject.ts\");\nvar GameInterface_1 = __webpack_require__(/*! @game/interface/GameInterface */ \"./src/interface/GameInterface.ts\");\nvar Graphics_1 = __webpack_require__(/*! ./Graphics */ \"./src/system/Graphics.ts\");\nvar GameStats_1 = __webpack_require__(/*! @game/content/GameStats */ \"./src/content/GameStats.ts\");\nvar SpellLibrary_1 = __webpack_require__(/*! @game/content/SpellLibrary */ \"./src/content/SpellLibrary.ts\");\n/**\n * Represents the player\n */\nvar Player = /** @class */ (function (_super) {\n    __extends(Player, _super);\n    function Player() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Player.prototype.init = function () {\n        Player.stats = new GameStats_1.GameStats();\n        Player.stats.baseConstitution = 20;\n        Player.stats.healFull();\n        Player.stats.spells.push(SpellLibrary_1.SpellLibrary.Icebolt);\n        Player.stats.spells.push(SpellLibrary_1.SpellLibrary.ChainLightning);\n    };\n    /**\n     * Teleport on coordinates\n     * @param x\n     * @param y\n     * @param mapId optional, specify it to teleport on another map\n     */\n    Player.teleport = function (coordinates, mapId) {\n        if (mapId) {\n            GameMap_1.GameMap.loadMap(mapId);\n        }\n        if (!coordinates) {\n            coordinates = GameMap_1.GameMap.getRandomSpawnPoint();\n        }\n        Player.x = coordinates.x;\n        Player.y = coordinates.y;\n        Camera_1.Camera.targetCoordinates = { x: Player.x, y: Player.y };\n    };\n    /**\n     * Tries to move in the designed orientation\n     * @param orientation\n     */\n    Player.moveByOrientation = function (orientation) {\n        var newCoordModifier = { x: 0, y: 0 };\n        if (orientation == Controller_1.Controller.KEY_UP)\n            newCoordModifier.y -= 1;\n        else if (orientation == Controller_1.Controller.KEY_DOWN)\n            newCoordModifier.y += 1;\n        else if (orientation == Controller_1.Controller.KEY_LEFT)\n            newCoordModifier.x -= 1;\n        else if (orientation == Controller_1.Controller.KEY_RIGHT)\n            newCoordModifier.x += 1;\n        else\n            return; // not a moving key\n        Player.move({ x: newCoordModifier.x + Player.x, y: newCoordModifier.y + Player.y });\n    };\n    /**\n     * Move to close coordinates, checking everything\n     * @param coordinates\n     * @returns\n     */\n    Player.move = function (coordinates) {\n        // not allowed to move\n        if (GameInterface_1.GameInterface.freezeControls) {\n            return;\n        }\n        // test collision\n        if (coordinates.x < 0 ||\n            coordinates.x >= GameMap_1.GameMap.MapWidth ||\n            coordinates.y < 0 ||\n            coordinates.y >= GameMap_1.GameMap.MapHeight) {\n            return;\n        }\n        // cancel movement if wall\n        if (!Player.canMoveTo(coordinates.x, coordinates.y)) {\n            return;\n        }\n        // process movement\n        Player.x = coordinates.x;\n        Player.y = coordinates.y;\n        Camera_1.Camera.targetCoordinates = { x: Player.x, y: Player.y };\n        // process walk tile event\n        Player.processGameEvent(GameMap_1.GameMap.getMapObject({ x: coordinates.x, y: coordinates.y }));\n    };\n    Player.prototype.display = function () {\n        Graphics_1.Graphics.ctx.fillStyle = '#804d32';\n        Graphics_1.Graphics.ctx.fillRect(Math.floor(Player.x * Camera_1.Camera.cellSize - Camera_1.Camera.offsetX + 3), Math.floor(Player.y * Camera_1.Camera.cellSize - Camera_1.Camera.offsetY + 3), Camera_1.Camera.cellSize - 6, Camera_1.Camera.cellSize - 6);\n        // mouse move cursor\n        if (!GameInterface_1.GameInterface.freezeControls) {\n            if (Player.canMoveTo(Controller_1.Controller.mouseTileX, Controller_1.Controller.mouseTileY)) {\n                Graphics_1.Graphics.ctx.fillRect(Math.floor(Controller_1.Controller.mouseTileX * Camera_1.Camera.cellSize - Camera_1.Camera.offsetX + 6), Math.floor(Controller_1.Controller.mouseTileY * Camera_1.Camera.cellSize - Camera_1.Camera.offsetY + 6), Camera_1.Camera.cellSize - 9, Camera_1.Camera.cellSize - 9);\n            }\n        }\n    };\n    /**\n     * Returns false if there is a wall or it's too far\n     * @param x\n     * @param y\n     */\n    Player.canMoveTo = function (x, y) {\n        // too far\n        if (Math.abs(Player.x - x) + Math.abs(Player.y - y) != 1)\n            return false;\n        // solid\n        var tile = GameMap_1.GameMap.getCollision({ x: x, y: y });\n        if (!tile || tile.solid) {\n            // cancel movement\n            return false;\n        }\n        // ok\n        return true;\n    };\n    Player.prototype.keyPressed = function (key) {\n        Player.moveByOrientation(key);\n    };\n    Player.prototype.mousePressed = function (x, y) {\n        Player.move({ x: Controller_1.Controller.mouseTileX, y: Controller_1.Controller.mouseTileY });\n    };\n    Player.processGameEvent = function (object) {\n        if (!object)\n            return;\n        if (object.onWalk) {\n            object.onWalk();\n        }\n    };\n    Player.die = function () {\n        console.log('Death');\n        GameInterface_1.GameInterface.addDialogue([{\n                id: 0,\n                textLines: [\"Votre corp se dissout une nouvelle fois ...\"],\n                answers: [\n                    {\n                        text: \"Continuer\",\n                        goto: 1,\n                        onAnswer: function () {\n                            Player.teleport(null, 'tuto');\n                            Player.stats.healFull();\n                        }\n                    }\n                ]\n            },\n            {\n                id: 1,\n                textLines: [\"... Pour réapparaitre à son point de départ.\", \"Comme toujours.\"],\n            }]);\n    };\n    return Player;\n}(GameObject_1.GameObject));\nexports.Player = Player;\n\n\n//# sourceURL=webpack://MorseQuest/./src/system/Player.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/Game.ts");
/******/ 	MorseQuest = __webpack_exports__;
/******/ 	
/******/ })()
;